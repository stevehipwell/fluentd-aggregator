name: Pull Request

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - .github/dependabot.yaml
      - .github/workflows/commit.yaml
      - .github/workflows/release.yaml

concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build:
    name: Build OCI Image
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        variant: [musl, glibc]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      PLATFORMS: "linux/amd64,linux/arm64"
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup
        id: setup
        run: |
          set -euo pipefail

          source_date_epoch="$(git log -1 --pretty=%ct)"

          echo "source_date_epoch=${source_date_epoch}" >> "${GITHUB_OUTPUT}"
          echo "SOURCE_DATE_EPOCH=${source_date_epoch}" >> "${GITHUB_ENV}"

      - name: Install Crane
        uses: imjasonh/setup-crane@31b88efe9de28ae0ffa220711af4b60be9435f6e # v0.4

      - name: Install Syft
        uses: action-stars/install-tool-from-github-release@ece2623611b240002e0dd73a0d685505733122f6 # v0.2.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: anchore
          repository: syft
          check_command: syft --version
          version: latest

      - name: Install Grype
        uses: action-stars/install-tool-from-github-release@ece2623611b240002e0dd73a0d685505733122f6 # v0.2.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: anchore
          repository: grype
          check_command: grype --version
          version: latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0

      - name: Install Hadolint
        uses: action-stars/install-tool-from-github-release@ece2623611b240002e0dd73a0d685505733122f6 # v0.2.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: hadolint
          repository: hadolint
          arch_amd64: x86_64
          os_linux: Linux
          extract: false
          filename_format: "{name}-{os}-{arch}"
          check_command: hadolint --version
          version: latest

      - name: Run Hadolint
        run: |
          set -euo pipefail
          hadolint --no-fail --format sarif ./${{ matrix.variant }}.dockerfile > ./hadolint-${{ matrix.variant }}.sarif

      - name: Upload Hadolint SARIF report
        uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
        with:
          category: hadolint-${{ matrix.variant }}
          sarif_file: hadolint-${{ matrix.variant }}.sarif

      - name: Generate OCI image metadata
        id: metadata
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          flavor: |
            latest=false
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=sha
          labels: |
            org.opencontainers.image.description=Fluentd aggregator OCI image based on the default Fluentd OCI image.
            org.opencontainers.image.authors=Steve Hipwell <steve.hipwell@gmail.com>

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build OCI image
        id: build
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          file: ./${{ matrix.variant }}.dockerfile
          context: .
          provenance: false
          sbom: false
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=gha,scope=buildkit-${{ matrix.variant }}
          cache-to: type=gha,scope=buildkit-${{ matrix.variant }},mode=max
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          push: true
          build-args: |
            SOURCE_DATE_EPOCH=${{ steps.setup.outputs.source_date_epoch }}

      - name: Generate SBOMs
        id: sboms
        run: |
          set -euo pipefail

          default_image="ghcr.io/${{ github.repository }}"
          sha_tag="${{ steps.metadata.outputs.version }}"

          for platform in ${PLATFORMS//,/ }
          do
            digest="$(crane digest "${default_image}:${sha_tag}" --platform="${platform}")"

            syft --source-name "${{ github.repository }}" --source-version "${digest}" --platform "${platform}" -o "spdx-json=syft-sbom-${{ matrix.variant }}-${platform#*/}.spdx.json" "${default_image}@${digest}"
          done

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ${{ matrix.variant }}-sboms
          retention-days: 28
          if-no-files-found: error
          path: "*.spdx.json"

      - name: Upload SBOMs to Dependency Graph
        uses: advanced-security/spdx-dependency-submission-action@5530bab9ee4bbe66420ce8280624036c77f89746 # v0.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filePath: "."
          filePattern: "*.spdx.json"

      - name: Scan SBOMs with Grype
        id: grype
        run: |
          set -euo pipefail

          directory_path="grype-results"
          mkdir -p "${directory_path}"

          for platform in ${PLATFORMS//,/ }
          do
            sarif_path="${directory_path}/grype-scan-${{ matrix.variant }}-${platform#*/}.sarif"
            grype --platform "${platform}" -o "sarif=${sarif_path}" "sbom:syft-sbom-${{ matrix.variant }}-${platform#*/}.spdx.json"
          done

          echo "path=${directory_path}" >> $GITHUB_OUTPUT

      - name: Upload Grype SARIF report
        uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3.28.9
        with:
          category: grype-${{ matrix.variant }}
          sarif_file: ${{ steps.grype.outputs.path }}
