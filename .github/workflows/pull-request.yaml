name: Pull Request

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - .github/dependabot.yaml
      - .github/workflows/commit.yaml
      - .github/workflows/release.yaml

jobs:
  build:
    name: Build OCI Image
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        variant: [musl, glibc]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      PLATFORMS: "linux/amd64,linux/arm64"
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup
        id: setup
        run: |
          set -euo pipefail

          source_date_epoch="$(git log -1 --pretty=%ct)"

          echo "source_date_epoch=${source_date_epoch}" >> "${GITHUB_OUTPUT}"
          echo "SOURCE_DATE_EPOCH=${source_date_epoch}" >> "${GITHUB_ENV}"

      - name: Install Crane
        uses: imjasonh/setup-crane@00c9e93efa4e1138c9a7a5c594acd6c75a2fbf0c # v0.3

      - name: Install Syft
        uses: anchore/sbom-action/download-syft@b6a39da80722a2cb0ef5d197531764a89b5d48c3 # v0.15.8
        with:
          syft-version: latest

      - name: Install Grype
        uses: anchore/scan-action/download-grype@3343887d815d7b07465f6fdcd395bd66508d486a # v3.6.4
        with:
          grype-version: v0.67.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3.1.0

      - name: Install Hadolint
        uses: action-stars/install-tool-from-github-release@9019d0a3125e2f45a48858afb632e6dbef663d79 # v0.2.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: hadolint
          repository: hadolint
          arch_amd64: x86_64
          os_linux: Linux
          extract: false
          filename_format: "{name}-{os}-{arch}"
          check_command: hadolint --version
          version: latest

      - name: Run Hadolint
        run: |
          set -euo pipefail
          hadolint --no-fail --format sarif ./${{ matrix.variant }}.dockerfile > ./hadolint-${{ matrix.variant }}.sarif

      - name: Upload Hadolint SARIF report
        uses: github/codeql-action/upload-sarif@cdcdbb579706841c47f7063dda365e292e5cad7a # v2.13.4
        with:
          category: hadolint-${{ matrix.variant }}
          sarif_file: hadolint-${{ matrix.variant }}.sarif

      - name: Generate OCI image metadata
        id: metadata
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          flavor: |
            latest=false
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=sha
          labels: |
            org.opencontainers.image.description=Fluentd aggregator OCI image based on the default Fluentd OCI image.
            org.opencontainers.image.authors=Steve Hipwell <steve.hipwell@gmail.com>

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build OCI image
        id: build
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          file: ./${{ matrix.variant }}.dockerfile
          context: .
          provenance: false
          sbom: false
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=gha,scope=buildkit-${{ matrix.variant }}
          cache-to: type=gha,scope=buildkit-${{ matrix.variant }},mode=max
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          push: true
          build-args: |
            SOURCE_DATE_EPOCH=${{ steps.setup.outputs.source_date_epoch }}

      - name: Generate SBOMs
        id: sboms
        run: |
          set -euo pipefail

          default_image="ghcr.io/${{ github.repository }}"
          sha_tag="${{ steps.metadata.outputs.version }}"

          for platform in ${PLATFORMS//,/ }
          do
            digest="$(crane digest "${default_image}:${sha_tag}" --platform="${platform}")"

            syft --source-name "${{ github.repository }}" --source-version "${digest}" --platform "${platform}" -o "spdx-json=syft-sbom-${{ matrix.variant }}-${platform#*/}.spdx.json" "${default_image}@${digest}"
          done

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: ${{ matrix.variant }}-sboms
          retention-days: 28
          if-no-files-found: error
          path: "*.spdx.json"

      - name: Upload SBOMs to Dependency Graph
        uses: advanced-security/spdx-dependency-submission-action@dc069b56ba31ce546dc419b549aceb808c632d9a # v0.0.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filePath: "."
          filePattern: "*.spdx.json"

      - name: Scan SBOMs with Grype
        id: grype
        run: |
          set -euo pipefail

          directory_path="grype-results"
          mkdir -p "${directory_path}"

          for platform in ${PLATFORMS//,/ }
          do
            sarif_path="${directory_path}/grype-scan-${{ matrix.variant }}-${platform#*/}.sarif"
            grype --platform "${platform}" -o "sarif=${sarif_path}" "sbom:syft-sbom-${{ matrix.variant }}-${platform#*/}.spdx.json"
          done

          echo "path=${directory_path}" >> $GITHUB_OUTPUT

      - name: Upload Grype SARIF report
        uses: github/codeql-action/upload-sarif@cdcdbb579706841c47f7063dda365e292e5cad7a # v2.13.4
        with:
          category: grype-${{ matrix.variant }}
          sarif_file: ${{ steps.grype.outputs.path }}
