name: Release

on:
  push:
    tags:
      - v*

jobs:
  release:
    name: Build & Release OCI Image
    permissions: write-all
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      PLATFORMS: "linux/amd64,linux/arm64"
    steps:
      - name: Checkout
        uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Install Crane
        uses: imjasonh/setup-crane@00c9e93efa4e1138c9a7a5c594acd6c75a2fbf0c # v0.3

      - name: Install Syft
        uses: anchore/sbom-action/download-syft@07978da4bdb4faa726e52dfc6b1bed63d4b56479 # v0.13.3
        with:
          syft-version: latest

      - name: Install Grype
        uses: anchore/scan-action/download-grype@dafbc97d7259af88b61bd260f2fde565d0668a72 # v3.3.4
        with:
          grype-version: latest

      - name: Install Cosign
        uses: sigstore/cosign-installer@c3667d99424e7e6047999fb6246c0da843953c65 # v3.0.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # v2.5.0

      - name: Run Hadolint
        uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        with:
          dockerfile: ./Dockerfile
          format: sarif
          output-file: hadolint.sarif
          no-fail: true

      - name: Upload Hadolint SARIF report
        uses: github/codeql-action/upload-sarif@16964e90ba004cdf0cd845b866b5df21038b7723 # v2.2.6
        with:
          category: hadolint
          sarif_file: hadolint.sarif

      - name: Generate OCI image metadata
        id: metadata
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # v4.3.0
        with:
          flavor: |
            latest=false
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=sha
          labels: |
            org.opencontainers.image.description=Fluentd aggregator OCI image based on the default Fluentd OCI image.
            org.opencontainers.image.authors=Steve Hipwell <steve.hipwell@gmail.com>
            org.opencontainers.image.version=${{ github.ref_name }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build OCI image
        id: build
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
        with:
          file: ./Dockerfile
          context: .
          provenance: false
          sbom: false
          platforms: ${{ env.PLATFORMS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          push: true

      - name: Generate SBOMs
        id: sboms
        run: |
          set -euo pipefail

          default_image="ghcr.io/${{ github.repository }}"
          sha_tag="${{ steps.metadata.outputs.version }}"
          sbom_paths=""

          for platform in ${PLATFORMS//,/ }
          do
            digest="$(crane digest "${default_image}:${sha_tag}" --platform="${platform}")"

            sbom_path="syft-sbom-${platform#*/}.spdx.json"
            syft --name "${{ github.repository }}@${digest}" --platform "${platform}" -o "spdx-json=${sbom_path}" "${default_image}@${digest}"
            sbom_paths="${sbom_paths}${sbom_path},"
          done

          sbom_paths="${sbom_paths%,}"

          echo "paths=${sbom_paths}" >> $GITHUB_OUTPUT

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: sboms
          retention-days: 28
          if-no-files-found: error
          path: "*.spdx.json"

      - name: Upload SBOMs to Dependency Graph
        uses: jhutchings1/spdx-to-dependency-graph-action@18b183bb96461852e90574736c3c65812b0f3cd8 # v0.0.2
        with:
          filePath: "."
          filePattern: "*.spdx.json"

      - name: Scan SBOMs with Grype
        id: grype
        run: |
          set -euo pipefail

          directory_path="grype-results"
          mkdir -p "${directory_path}"

          for platform in ${PLATFORMS//,/ }
          do
            sarif_path="${directory_path}/grype-scan-${platform#*/}.sarif"
            grype --platform "${platform}" -o sarif "sbom:syft-sbom-${platform#*/}.spdx.json" > "${sarif_path}"
          done

          echo "path=${directory_path}" >> $GITHUB_OUTPUT

      - name: Upload Grype SARIF report
        uses: github/codeql-action/upload-sarif@16964e90ba004cdf0cd845b866b5df21038b7723 # v2.2.6
        with:
          category: grype
          sarif_file: ${{ steps.grype.outputs.path }}

      - name: Fail workflow
        if: ${{ steps.hadolint.outcome == 'failure' && steps.grype.outcome == 'failure' }}
        run: |
          set -euo pipefail
          echo "::error::Code scanning failed."
          exit 1

      - name: Login to DockerHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push OCI image tags
        id: push
        run: |
          set -euo pipefail

          default_image="ghcr.io/${{ github.repository }}"
          sha_tag="${{ steps.metadata.outputs.version }}"
          digest="${{ steps.build.outputs.digest }}"

          version="$(echo "${{ github.ref_name }}" | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')"
          major_minor="$(echo "${version}" | grep -Eo '^[0-9]+\.[0-9]+')"
          major="$(echo "${major_minor}" | grep -Eo '^[0-9]+')"

          images="docker.io/${{ github.repository }}"
          tags="latest,${version},${major_minor},${major}"

          references="${default_image}:${sha_tag}"

          for image in ${images//,/ }
          do
            crane copy --platform all "${default_image}:${sha_tag}@${digest}" "${image}:${sha_tag}"
            references="${references},${image}:${sha_tag}"
          done

          images="${images},${default_image}"

          for image in ${images//,/ }
          do
            for tag in ${tags//,/ }
            do
              crane tag --platform all "${image}:${sha_tag}@${digest}" "${tag}"
              references="${references},${image}:${tag}"
            done
          done

          echo "references=${references}" >> $GITHUB_OUTPUT

      - name: Sign OCI image
        run: |
          set -euo pipefail

          default_image="ghcr.io/${{ github.repository }}"
          sha_tag="${{ steps.metadata.outputs.version }}"
          references="${{ steps.push.outputs.references }}"

          for reference in ${references//,/ }
          do
            cosign sign --yes --recursive "${reference}@${{ steps.build.outputs.digest }}"
          done

          for platform in ${PLATFORMS//,/ }
          do
            digest="$(crane digest "${default_image}:${sha_tag}@${{ steps.build.outputs.digest }}" --platform="${platform}")"

            for reference in ${references//,/ }
            do
              cosign attest --yes --type spdxjson --predicate syft-sbom-${platform#*/}.spdx.json "${reference}@${digest}"
              cosign attach sbom --type spdx --input-format json --sbom syft-sbom-${platform#*/}.spdx.json "${reference}@${digest}"
              cosign sign --yes "${reference%:*}:${digest/:/-}.sbom"
            done
          done

      - name: Update Docker repository description
        uses: peter-evans/dockerhub-description@202973a37c8a723405c0c5f0a71b6d99db470dae # v3.3.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: Get changelog entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@b97ce03a10d9bdbb07beb491c76a5a01d78cd3ef # v2.2.2
        with:
          path: ./CHANGELOG.md
          version: ${{ github.ref_name }}

      - name: Create release
        uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e # v1.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          body: ${{ steps.changelog_reader.outputs.changes }}
