name: Release

on:
  push:
    tags:
      - v*

jobs:
  release:
    name: Build & Release OCI Image
    permissions: write-all
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8

      - name: Install Cosign
        uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b

      - name: Run Hadolint
        uses: hadolint/hadolint-action@4b5806eb9c6bee4954fc0e0cc3ad6175fc9782c1
        continue-on-error: true
        with:
          dockerfile: ./Dockerfile
          format: sarif
          output-file: hadolint.sarif
          no-fail: false

      - name: Upload Hadolint SARIF report
        uses: github/codeql-action/upload-sarif@678fc3afe258fb2e0cdc165ccf77b85719de7b3c
        with:
          category: hadolint
          sarif_file: hadolint.sarif

      - name: Generate OCI image metadata
        id: metadata
        uses: docker/metadata-action@57396166ad8aefe6098280995947635806a0e6ea
        with:
          flavor: |
            latest=false
          images: |
            ghcr.io/${{ github.repository }}
            docker.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.description=Fluentd aggregator OCI image based on the default Fluentd OCI image.
            org.opencontainers.image.authors=Steve Hipwell <steve.hipwell@gmail.com>

      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325

      - name: Build OCI image
        id: build
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          file: ./Dockerfile
          context: .
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          load: true
          push: false

      - name: Generate OCI image SBOM
        uses: anchore/sbom-action@06e109483e6aa305a2b2395eabae554e51530e1d
        with:
          image: "ghcr.io/${{ github.repository }}:${{ steps.metadata.outputs.version }}"
          dependency-snapshot: true
          format: spdx-json
          artifact-name: ${{ github.event.repository.name }}-sbom.spdx.json
          output-file: ${{ github.event.repository.name }}-sbom.spdx.json

      - name: Scan OCI image SBOM with Grype
        id: scan
        uses: anchore/scan-action@3578976016e97642035dd9a0be842060e62422c6
        continue-on-error: true
        with:
          sbom: ${{ github.event.repository.name }}-sbom.spdx.json
          severity-cutoff: medium
          output-format: sarif
          fail-build: true

      - name: Upload Grype SARIF report
        uses: github/codeql-action/upload-sarif@678fc3afe258fb2e0cdc165ccf77b85719de7b3c
        with:
          category: grype
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Fail workflow
        if: ${{ steps.hadolint.outcome == 'failure' && steps.scan.outcome == 'failure' }}
        run: |
          set -euo pipefail
          echo "::error::Code scanning failed."
          exit 1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push OCI image
        id: build_push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          file: ./Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          load: false
          push: true

      - name: Sign OCI image
        env:
          COSIGN_EXPERIMENTAL: true
        run: |
          set -euo pipefail
          cosign sign --yes --recursive ghcr.io/${{ github.repository }}:${{ steps.metadata.outputs.version }}@${{ steps.build_push.outputs.digest }}
          cosign sign --yes --recursive docker.io/${{ github.repository }}:${{ steps.metadata.outputs.version }}@${{ steps.build_push.outputs.digest }}

      - name: Update Docker repository description
        uses: peter-evans/dockerhub-description@93b93397c27ed52b4055b8c6b2f8d92456ab3c56
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: Get changelog entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@8f405204c383ffc2ff8646e9ae4daf7aa3a8b213
        with:
          path: ./CHANGELOG.md
          version: v${{ steps.metadata.outputs.version }}

      - name: Create release
        uses: ncipollo/release-action@4c75f0f2e4ae5f3c807cf0904605408e319dcaac
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          body: ${{ steps.changelog_reader.outputs.changes }}
