name: Build OCI Image

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

permissions: read-all

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    outputs:
      git_sha_short: ${{ steps.setup.outputs.git_sha_short }}
      changed: ${{ steps.changes.outputs.any_changed }}
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 2

      - name: Setup
        id: setup
        run: |
          set -euo pipefail

          git_sha_short="$(git rev-parse --short HEAD)"
          echo "git_sha_short=${git_sha_short}" >> "${GITHUB_OUTPUT}"

      - name: Check changes
        id: changes
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files_ignore: |-
            .github/**
            CHANGELOG.md
            LICENCE
            README.md

  build:
    name: Build
    uses: action-stars/build-workflows/.github/workflows/build-oci-image.yaml@e63e3af93b961d5edfedfb3bcdc03672f8f303a9 # v0.5.1
    needs: setup
    if: github.event_name == 'workflow_dispatch' || needs.setup.outputs.changed == 'true'
    permissions:
      attestations: write
      contents: write
      id-token: write
      packages: write
      security-events: write
    with:
      name: ${{ github.event.repository.name }}
      repository: ${{ github.repository_owner }}
      dockerfile: Dockerfile
      platforms: linux/amd64,linux/arm64
      tags: ${{ github.event_name != 'pull_request' && 'main' || format('sha-{0}', needs.setup.outputs.git_sha_short) }}
      scan_image: true
      push_sbom: true
      push_sarif: true
      push_image: true

  review:
    name: Dependency Review
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Dependency Review
        uses: actions/dependency-review-action@da24556b548a50705dd671f47852072ea4c105d9 # v4.7.1
        with:
          comment-summary-in-pr: always

  check:
    name: Check
    needs:
      - build
      - review
    if: always()
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Check
        run: |
          set -euo pipefail

          results="${{ join(needs.*.result, ' ') }}"

          for result in ${results}; do
            if [[ "$result" == "failure" ]] || [[ "$result" == "cancelled" ]]; then
              echo "::error::Workflow failed!"
              exit 1
            fi
          done
